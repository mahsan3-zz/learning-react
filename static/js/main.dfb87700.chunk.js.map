{"version":3,"sources":["Navigation/Navigation.js","containers/home/Home.js","CoffeeCard/CoffeeCard.js","Coffee/Coffee.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","to","href","tabIndex","aria-disabled","Home","CoffeeCard","props","state","coffeeObj","coffeeItem","selected","toggleLike","bind","this","setState","src","image","alt","name","description","onClick","width","height","title","React","Component","Coffee","coffees","map","c","key","role","target","type","data-dismiss","aria-label","aria-hidden","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sQA8BeA,MA3Bf,WAEI,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,2BACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,WACL,0BAAMD,UAAU,YAAhB,aAGR,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAWE,KAAK,KAA7B,SAEJ,wBAAIF,UAAU,YACV,uBAAGA,UAAU,WAAWE,KAAK,KAA7B,SAEJ,wBAAIF,UAAU,YACV,uBAAGA,UAAU,oBAAoBE,KAAK,IAAIC,SAAS,KAAKC,gBAAc,QAAtE,iBCTTC,MAVf,WACI,OACI,yBAAKL,UAAU,OACX,yBAAKA,UAAU,OACX,qD,sDCkCDM,E,YApCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,UAAaF,EAAMG,WACnBC,UAAU,GAGd,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAPH,E,0EAWfC,KAAKC,UAAS,SAAAP,GAAK,MAAK,CACpBG,UAAWH,EAAMG,e,+BAKrB,OACI,yBAAKX,UAAU,QACX,yBAAKgB,IAAKF,KAAKN,MAAMC,UAAUQ,MAAOjB,UAAU,eAAekB,IAAI,cACnE,yBAAKlB,UAAU,aACX,wBAAIA,UAAU,cAAcc,KAAKN,MAAMC,UAAUU,MACjD,uBAAGnB,UAAU,aACRc,KAAKN,MAAMC,UAAUW,aAE1B,4BAAQpB,UAAU,kBAAkBqB,QAASP,KAAKF,YAAlD,QACUE,KAAKN,MAAMG,SAAW,yBAAKK,IAAI,mBAAmBE,IAAI,GAAGI,MAAM,KAAKC,OAAO,KAAKC,MAAM,UAAY,U,GA5BvGC,IAAMC,WCyDhBC,E,YAtDX,aAAe,IAAD,8BACV,+CACKnB,MAAQ,CACToB,QAAS,CAAC,CACNT,KAAM,WACNF,MAAO,wBACPG,YAAa,sKACd,CACCD,KAAM,UACNF,MAAO,sBACPG,YAAa,uFACd,CACCD,KAAM,YACNF,MAAO,wBACPG,YAAa,0FACd,CACCD,KAAM,YACNF,MAAO,yBACPG,YAAa,0PACd,CACCD,KAAM,aACNF,MAAO,yBACPG,YAAa,6JACd,CACCD,KAAM,YACNF,MAAO,yBACPG,YAAa,wPA1BX,E,sEAgCV,OACI,yBAAKpB,UAAU,OACVc,KAAKN,MAAMoB,QAAQC,KAAI,SAACC,GACrB,OACI,yBAAK9B,UAAU,gCAAgC+B,IAAKD,EAAEX,MAClD,kBAAC,EAAD,CAAYT,WAAYoB,QAKpC,yBAAK9B,UAAU,kDAAkDgC,KAAK,SAAtE,WACY,uBAAGC,OAAO,SAAS/B,KAAK,4EAAxB,oBACR,4BAAQgC,KAAK,SAASlC,UAAU,QAAQmC,eAAa,QAAQC,aAAW,SACpE,0BAAMC,cAAY,QAAlB,e,GA/CHZ,IAAMC,WC0BZY,MAtBf,WACE,OACI,kBAAC,IAAD,KACI,yBAAKtC,UAAU,mBACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,IAAIC,UAAWpC,IACjC,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,UAAUC,UAAWd,UCR7Ce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dfb87700.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <ul className=\"nav justify-content-end\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/coffee\">\r\n                            <span className=\"nav-link\">Coffees</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <h2>Home content here!</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nclass CoffeeCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coffeeObj  : props.coffeeItem,\r\n            selected: false\r\n        };\r\n\r\n        this.toggleLike = this.toggleLike.bind(this);\r\n    }\r\n\r\n    toggleLike() {\r\n        this.setState(state => ({\r\n            selected: !state.selected\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <img src={this.state.coffeeObj.image} className=\"card-img-top\" alt=\"coffee :P\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.state.coffeeObj.name}</h5>\r\n                    <p className=\"card-text\">\r\n                        {this.state.coffeeObj.description}\r\n                    </p>\r\n                    <button className=\"btn btn-primary\" onClick={this.toggleLike}>\r\n                        Like {this.state.selected ? <img src=\"/icons/check.svg\" alt=\"\" width=\"32\" height=\"32\" title=\"check\" />: ''}\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CoffeeCard;","import React from \"react\";\r\nimport CoffeeCard from \"../CoffeeCard/CoffeeCard\";\r\n\r\nclass Coffee extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            coffees: [{\r\n                name: \"Espresso\",\r\n                image: \"/coffees/espresso.PNG\",\r\n                description: \"The espresso, also known as a short black, is approximately one ounce of highly concentrated coffee. Although simple in appearance, it can be difficult to master.\"\r\n            }, {\r\n                name: \"Red Eye\",\r\n                image: \"/coffees/redeye.PNG\",\r\n                description: \"The red eye's purpose is to add a boost of caffeine to your standard cup of coffee.\"\r\n            }, {\r\n                name: \"Black Eye\",\r\n                image: \"/coffees/blackeye.PNG\",\r\n                description: \"The black eye is just the doubled version of the red eye and is very high in caffeine.\"\r\n            }, {\r\n                name: \"Americano\",\r\n                image: \"/coffees/americano.PNG\",\r\n                description: \"Americanos are popular breakfast drinks and thought to have originated during World War II. Soldiers would add water to their coffee to extend their rations farther. The water dilutes the espresso while still maintaining a high level of caffeine.\"\r\n            }, {\r\n                name: \"Long Black\",\r\n                image: \"/coffees/longblack.PNG\",\r\n                description: \"The long black is a similar coffee drink to the americano, but it originated in New Zealand and Australia. It generally has more crema than an americano.\"\r\n            }, {\r\n                name: \"Macchiato\",\r\n                image: \"/coffees/macchiato.PNG\",\r\n                description: \"The word 'macchiato' means mark or stain. This is in reference to the mark that steamed milk leaves on the surface of the espresso as it is dashed into the drink. Flavoring syrups are often added to the drink according to customer preference.\"\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.state.coffees.map((c) => {\r\n                    return (\r\n                        <div className=\"col-12 col-md-3 col-lg-4 pb-3\" key={c.name}>\r\n                            <CoffeeCard coffeeItem={c} />\r\n                        </div>\r\n                    );\r\n                })}\r\n\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    Source: <a target=\"_blank\" href=\"https://www.webstaurantstore.com/article/397/types-of-coffee-drinks.html\">webstaurantstore</a>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Coffee;","import React from 'react';\nimport './App.scss';\nimport Navigation from \"./Navigation/Navigation\";\nimport Home from \"./containers/home/Home\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Coffee from \"./Coffee/Coffee\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n          <div className=\"container h-100\">\n              <div className=\"d-flex flex-column h-100\">\n                  <div className=\"row\">\n                      <div className=\"col col-12\">\n                          <Navigation/>\n                      </div>\n                  </div>\n                  <div className=\"row flex-grow-1\">\n                      <div className=\"col col-12\">\n                          <Route exact path=\"/\" component={Home}></Route>\n                          <Route exact path=\"/coffee\" component={Coffee}></Route>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}